#!/bin/bash

echo "üß™ Testing ProGuard/R8 Obfuscation Setup"
echo "========================================"

# Check if ProGuard is enabled
echo "1. Checking ProGuard configuration..."
if grep -q "android.enableProguardInReleaseBuilds=true" android/gradle.properties; then
    echo "   ‚úÖ ProGuard is enabled in gradle.properties"
else
    echo "   ‚ùå ProGuard is not enabled"
fi

if grep -q "android.enableShrinkResourcesInReleaseBuilds=true" android/gradle.properties; then
    echo "   ‚úÖ Resource shrinking is enabled"
else
    echo "   ‚ùå Resource shrinking is not enabled"
fi

# Check ProGuard rules
echo ""
echo "2. Checking ProGuard rules..."
if grep -q "com.facebook.react" android/app/proguard-rules.pro; then
    echo "   ‚úÖ React Native rules present"
else
    echo "   ‚ùå React Native rules missing"
fi

if grep -q "expo.modules" android/app/proguard-rules.pro; then
    echo "   ‚úÖ Expo modules rules present"
else
    echo "   ‚ùå Expo modules rules missing"
fi

if grep -q "native <methods>" android/app/proguard-rules.pro; then
    echo "   ‚úÖ Native methods protection present"
else
    echo "   ‚ùå Native methods protection missing"
fi

# Check build configuration
echo ""
echo "3. Checking build configuration..."
if grep -q "proguard-android-optimize.txt" android/app/build.gradle; then
    echo "   ‚úÖ Optimized ProGuard configuration"
else
    echo "   ‚ùå Standard ProGuard configuration"
fi

echo ""
echo "üìã Next steps to test functionality:"
echo "   1. Build release version: eas build --profile production --platform android"
echo "   2. Install and test all app features"
echo "   3. Check crash reports after release"
echo ""
echo "üîç Features to test specifically:"
echo "   ‚Ä¢ App startup and navigation"
echo "   ‚Ä¢ Google Maps functionality"
echo "   ‚Ä¢ Image upload/picker"
echo "   ‚Ä¢ Location services"
echo "   ‚Ä¢ Push notifications"
echo "   ‚Ä¢ Supabase API calls"
echo "   ‚Ä¢ In-app purchases (if applicable)"
echo "   ‚Ä¢ Data persistence (AsyncStorage)"
